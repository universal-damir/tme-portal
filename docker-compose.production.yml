services:
  # TME Portal Application
  app:
    image: tme-portal-server:latest
    ports:
      - "80:3000"  # Production on port 80
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - BREVO_SMTP_USER=${BREVO_SMTP_USER}
      - BREVO_SMTP_PASSWORD=${BREVO_SMTP_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECURE_COOKIES=false
      - DOCKER_ENV=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tme_network
    volumes:
      - app_uploads:/app/public/uploads
      - app_logs:/app/logs
      - ./public/staff-photos:/app/public/staff-photos:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL Database - NO EXTERNAL PORTS IN PRODUCTION
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tme_portal
      - POSTGRES_USER=tme_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
      - postgres_logs:/var/log/postgresql
    restart: unless-stopped
    networks:
      - tme_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tme_user -d tme_portal"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres 
      -c shared_buffers=256MB
      -c max_connections=100
      -c log_statement=mod
      -c log_destination=stderr
      -c logging_collector=on
      -c log_directory=/var/log/postgresql
      -c log_filename='postgresql-%Y-%m-%d.log'
      -c log_rotation_age=1d
      -c log_rotation_size=100MB

  # Redis Cache - NO EXTERNAL PORTS IN PRODUCTION
  redis:
    image: redis:7-alpine
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfilename "redis-aof.aof"
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    restart: unless-stopped
    networks:
      - tme_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Automated Backup Service
  backup:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=tme_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=tme_portal
      - BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}
    volumes:
      - ./backups:/backups
      - ./scripts/backup-encrypted.sh:/backup.sh:ro
    networks:
      - tme_network
    entrypoint: ["sh", "-c", "while true; do /backup.sh; sleep 86400; done"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  postgres_logs:
    driver: local
  redis_logs:
    driver: local
networks:
  tme_network:
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/16